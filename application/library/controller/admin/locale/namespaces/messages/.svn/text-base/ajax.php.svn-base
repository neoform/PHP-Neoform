<?php
	
	core::output()->output_type('json');
	core::http()->ref();
	
	$json = new render_json();
	
	switch (core::http()->segment(5)) {
		
		case 'create':
			try {
				locale_key_api::create(
					core::http()->posts()
				);
			} catch (input_exception $e) {
				$json->message = $e->message() ? $e->message() : 'Translation could not be created';
				$json->errors = $e->errors();
			}
			break;
		
		case 'update':
			try {
				locale_key_message_api::update(
					core::http()->posts()
				);
			} catch (input_exception $e) {
				$json->message = $e->message() ? $e->message() : 'Translation could not be updated';
				$json->errors = $e->errors();
			}
			break;
		
		case 'delete':
			try {
				locale_key_api::delete(core::http()->parameter('id'));
			} catch (input_exception $e) {
				$json->message = $e->message() ? $e->message() : 'Translation could not be deleted';
				$json->errors = $e->errors();
			}
			break;
	}
	
	$json->status = "good";
	$json->render();